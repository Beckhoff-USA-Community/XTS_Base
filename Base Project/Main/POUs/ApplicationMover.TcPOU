<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4026.8">
  <POU Name="ApplicationMover" Id="{516536b5-5233-0a95-01e8-9585147c75fa}" SpecialFunc="None">
    <Declaration><![CDATA[// This function Block extends the Referenced Library Mover (FB), so the user can expand the capabilities of the XTS Mover Functions
FUNCTION_BLOCK ApplicationMover EXTENDS Mover
VAR_INPUT
END_VAR
VAR_OUTPUT
END_VAR
VAR
	cnt: UDINT;
	_PositionLag: LREAL;
	fbMC_CalcDynamicsByRampTime: MC_CalcDynamicsByRampTime;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[]]></ST>
    </Implementation>
    <Method Name="Cyclic" Id="{a81886a0-983c-0294-0adc-9591fa48a449}">
      <Declaration><![CDATA[METHOD Cyclic : iMover
VAR_IN_OUT
	GroupReference	: AXES_GROUP_REF;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[// Call Base Class (Mover) Cyclic Logic
SUPER^.Cyclic(GroupReference);

//======= 
// To Call ApplicationMover addon Method/Properties/Variables... 
//		you must call Mover[] array index directly, as Station/Zone/PositionTrig/SpeedTrig do not know about ApplicationMover add ons

// Add ApplicationMover specific code here
cnt:= cnt + 1;
_PositionLag:= THIS^.AxisReference.NcToPlc.PosDiff;



// Latch Errors
IF fbMC_CalcDynamicsByRampTime.Error THEN
	ErrorID						:= fbMC_CalcDynamicsByRampTime.ErrorID;
	ErrorOrigin					:= CONCAT( InstancePath, '.fbMC_CalcDynamicsByRampTime' );
	//LocalVars.State				:= MV_ERROR;
END_IF

// Call Fbs Cyclically
fbMC_CalcDynamicsByRampTime();
]]></ST>
      </Implementation>
    </Method>
    <Method Name="MoveToStationByRampTime" Id="{30fb390b-b4a8-0444-29f0-600dae10b753}">
      <Declaration><![CDATA[METHOD MoveToStationByRampTime
VAR_INPUT
	DestinationStation	: REFERENCE TO Station;	
    Velocity     : LREAL;
    RampTime     : LREAL;
    Stiffness    : LREAL;
	Gap			 : LREAL;
END_VAR
VAR
	MotionParameters: MotionParameters_typ;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[// This method internally calls MC_CalcDynamicsByRampTime from Tc2_MC2.lib
// https://infosys.beckhoff.com/content/1033/tcplclib_tc2_mc2/13611300875.html?id=1298283191705576852

fbMC_CalcDynamicsByRampTime(
	Velocity:= Velocity, 
	RampTime:= RampTime, 
	Stiffness:= Stiffness, 
	Error=> , 
	ErrorID=> , 
	Acceleration=> , 
	Deceleration=> , 
	Jerk=> );

MotionParameters.Velocity			:= Velocity;
MotionParameters.Acceleration		:= fbMC_CalcDynamicsByRampTime.Acceleration;
MotionParameters.Deceleration		:= fbMC_CalcDynamicsByRampTime.Deceleration;
MotionParameters.Jerk				:= fbMC_CalcDynamicsByRampTime.Jerk;
MotionParameters.Gap				:= Gap;
MotionParameters.Direction			:= Tc2_Mc2.MC_Direction.MC_Positive_Direction;

SUPER^.MotionParameters:= MotionParameters;
SUPER^.MoveToStation(DestinationStation);]]></ST>
      </Implementation>
    </Method>
    <Property Name="PositionLag" Id="{2f9b4da0-9f46-0501-2862-3b56ba7816bb}">
      <Declaration><![CDATA[{attribute 'monitoring' := 'call'}
PROPERTY PositionLag : LREAL]]></Declaration>
      <Get Name="Get" Id="{8ea91099-3f22-02ba-0930-a3b600f2f5d6}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[PositionLag:= _PositionLag;
]]></ST>
        </Implementation>
      </Get>
    </Property>
    <LineIds Name="ApplicationMover">
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="ApplicationMover.Cyclic">
      <LineId Id="3" Count="9" />
      <LineId Id="23" Count="1" />
      <LineId Id="14" Count="0" />
      <LineId Id="13" Count="0" />
      <LineId Id="15" Count="2" />
      <LineId Id="2" Count="0" />
      <LineId Id="18" Count="0" />
      <LineId Id="20" Count="0" />
      <LineId Id="19" Count="0" />
      <LineId Id="21" Count="1" />
    </LineIds>
    <LineIds Name="ApplicationMover.MoveToStationByRampTime">
      <LineId Id="3" Count="20" />
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="ApplicationMover.PositionLag.Get">
      <LineId Id="3" Count="0" />
      <LineId Id="2" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>